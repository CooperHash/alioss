import axios from "axios"
import { useEffect, useState } from "react"

export default function AliHome() {
  const [objlist, setObjList] = useState([])
  const [prefixList, setPrefixList] = useState([])
  const [upperFile, setUpperFile] = useState("")

  const [previewFile, setPreviewFile] = useState("")

  const [isOpen, setIsOpen] = useState(-1)
  useEffect(() => {
    axios.get("http://localhost:3000/api/getali?path=&isDir=true").then((res) => {
      console.log(res.data);
      if (!res.data.prefixes) {

        setObjList(res.data.objects)
      } else {


        setPrefixList(res.data.prefixes)
      }
      //setObjList(res.data.prefixes)
    })
  }, [])

  const openDir = (index, path) => {
    axios.get(`http://localhost:3000/api/getali?path=${path}&isDir=true`).then((res) => {
      console.log(res.data);
      setIsOpen(index)
      setUpperFile(path)
      if (res.data.objects) {
        setObjList(res.data.objects)
      }

      if (res.data.prefixes) {
        setPrefixList(res.data.prefixes)
      }
    })
  }


  const preview = async (path) => {
    const data = await axios.get(`http://localhost:3000/api/getfile?path=${path}`)
    console.log('data', data);
    const base64 = Buffer.from(data.data.content, 'binary').toString('base64');
    const imageUrl = `data:image/jpeg;base64,${base64}`;
    setPreviewFile(imageUrl)
    console.log('Image URL:', imageUrl);
  }


  return (
    <div className="flex ml-[200px] mt-[100px]">
      {prefixList.length !== 0 && <div className="flex flex-col space-y-5">
        <div className="mr-[10px]">{upperFile}</div>
        {prefixList.map((item, index) => (
          <div key={index} className="flex flex-row space-x-3 cursor-pointer" onClick={() => openDir(index, item)}>
            {index == isOpen ? <svg width="120" height="42" viewBox="0 0 188 133" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M11 99.5L29.5 37.5H157" stroke="#C7C9CA" stroke-width="5" />
              <path d="M10.5 94L24.5 28H157.5" stroke="#C7C9CA" stroke-width="5" />
              <path d="M5.5 128V15C5.5 9.47715 9.97715 5 15.5 5H50.5995C51.5286 5 52.4532 5.1295 53.3467 5.38476L83.5 14H152C157.523 14 162 18.4772 162 24V47M5.5 128H140.41C142.304 128 144.035 126.93 144.882 125.236L181.829 51.3416C182.827 49.3469 181.376 47 179.146 47H162M5.5 128L34.7807 50.2381C35.5143 48.2898 37.3783 47 39.46 47H162" stroke="#1396DB" stroke-width="10" />
              <path d="M44.4414 94.4883V79.8398C44.4414 76.9915 45.8656 75.5674 48.7139 75.5674H52.498C55.3464 75.5674 56.7705 76.9915 56.7705 79.8398V93.3896L54.4512 94.4883H54.3291V85.8945H46.8828V93.3896L44.5635 94.4883H44.4414ZM46.8828 83.6729H54.3291V79.8398C54.3291 78.4564 53.7188 77.7646 52.498 77.7646H48.7139C47.4932 77.7646 46.8828 78.4564 46.8828 79.8398V83.6729ZM61.6533 94.4883V76.1777L63.9727 75.0791H64.0947V93.3896L61.7754 94.4883H61.6533ZM69.1606 77.8745C68.8758 77.5815 68.7334 77.2316 68.7334 76.8247C68.7334 76.4097 68.8758 76.0557 69.1606 75.7627C69.4455 75.4697 69.7913 75.3232 70.1982 75.3232C70.6051 75.3232 70.951 75.4697 71.2358 75.7627C71.5207 76.0557 71.6631 76.4097 71.6631 76.8247C71.6631 77.2316 71.5207 77.5815 71.2358 77.8745C70.951 78.1675 70.6051 78.314 70.1982 78.314C69.7913 78.314 69.4455 78.1675 69.1606 77.8745ZM68.9775 94.4883V81.1826L71.2969 80.084H71.4189V93.3896L69.0996 94.4883H68.9775ZM86.0674 94.4883V76.1777L87.3613 75.5674H93.8799C96.7282 75.5674 98.1523 76.9915 98.1523 79.8398V83.502C98.1523 86.3503 96.7282 87.7744 93.8799 87.7744H88.5088V93.3896L86.1895 94.4883H86.0674ZM88.5088 77.7646V85.5771H93.8799C95.1006 85.5771 95.7109 84.8854 95.7109 83.502V79.8398C95.7109 78.4564 95.1006 77.7646 93.8799 77.7646H88.5088ZM104.256 91.8027H106.819C107.633 91.8027 108.04 91.3145 108.04 90.3379V88.6655C108.04 87.689 107.633 87.2007 106.819 87.2007H104.256C103.442 87.2007 103.035 87.689 103.035 88.6655V90.3379C103.035 91.3145 103.442 91.8027 104.256 91.8027ZM104.256 94C101.814 94 100.594 92.7793 100.594 90.3379V88.6655C100.594 86.2241 101.814 85.0034 104.256 85.0034H106.819C107.243 85.0034 107.649 85.1255 108.04 85.3696V84.2344C108.04 83.2578 107.633 82.7695 106.819 82.7695H102.449V82.6475L103.426 80.5723H106.819C109.261 80.5723 110.481 81.793 110.481 84.2344V93.3896L108.162 94.4883H108.04V93.6338C107.731 93.8779 107.324 94 106.819 94H104.256ZM114.144 94.4883V84.2344C114.144 81.793 115.364 80.5723 117.806 80.5723H120.613C123.055 80.5723 124.275 81.793 124.275 84.2344V93.3896L121.956 94.4883H121.834V84.2344C121.834 83.2578 121.427 82.7695 120.613 82.7695H117.806C116.992 82.7695 116.585 83.2578 116.585 84.2344V93.3896L114.266 94.4883H114.144ZM131.6 94C129.158 94 127.938 92.7793 127.938 90.3379V84.2344C127.938 81.793 129.158 80.5723 131.6 80.5723H134.407C136.849 80.5723 138.069 81.793 138.069 84.2344V84.8813L130.416 90.8018C130.529 91.4691 130.924 91.8027 131.6 91.8027H134.407C135.221 91.8027 135.628 91.3145 135.628 90.3379V89.6909L137.947 88.5923H138.069V90.3379C138.069 92.7793 136.849 94 134.407 94H131.6ZM130.379 88.2505L135.616 84.0269C135.567 83.1886 135.164 82.7695 134.407 82.7695H131.6C130.786 82.7695 130.379 83.2578 130.379 84.2344V88.2505ZM142.342 94.4883V76.1777L144.661 75.0791H144.783V93.3896L142.464 94.4883H142.342Z" fill="black" />
            </svg> : <svg width="120" height="42" viewBox="0 0 149 131" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M31.1484 89.4297V76.5391C31.1484 74.0326 32.4017 72.7793 34.9082 72.7793H38.2383C40.7448 72.7793 41.998 74.0326 41.998 76.5391V88.4629L39.957 89.4297H39.8496V81.8672H33.2969V88.4629L31.2559 89.4297H31.1484ZM33.2969 79.9121H39.8496V76.5391C39.8496 75.3216 39.3125 74.7129 38.2383 74.7129H34.9082C33.834 74.7129 33.2969 75.3216 33.2969 76.5391V79.9121ZM46.2949 89.4297V73.3164L48.3359 72.3496H48.4434V88.4629L46.4023 89.4297H46.2949ZM52.9014 74.8096C52.6507 74.5518 52.5254 74.2438 52.5254 73.8857C52.5254 73.5205 52.6507 73.209 52.9014 72.9512C53.152 72.6934 53.4564 72.5645 53.8145 72.5645C54.1725 72.5645 54.4769 72.6934 54.7275 72.9512C54.9782 73.209 55.1035 73.5205 55.1035 73.8857C55.1035 74.2438 54.9782 74.5518 54.7275 74.8096C54.4769 75.0674 54.1725 75.1963 53.8145 75.1963C53.4564 75.1963 53.152 75.0674 52.9014 74.8096ZM52.7402 89.4297V77.7207L54.7812 76.7539H54.8887V88.4629L52.8477 89.4297H52.7402ZM67.7793 89.4297V73.3164L68.918 72.7793H74.6543C77.1608 72.7793 78.4141 74.0326 78.4141 76.5391V79.7617C78.4141 82.2682 77.1608 83.5215 74.6543 83.5215H69.9277V88.4629L67.8867 89.4297H67.7793ZM69.9277 74.7129V81.5879H74.6543C75.7285 81.5879 76.2656 80.9792 76.2656 79.7617V76.5391C76.2656 75.3216 75.7285 74.7129 74.6543 74.7129H69.9277ZM83.7852 87.0664H86.041C86.7572 87.0664 87.1152 86.6367 87.1152 85.7773V84.3057C87.1152 83.4463 86.7572 83.0166 86.041 83.0166H83.7852C83.069 83.0166 82.7109 83.4463 82.7109 84.3057V85.7773C82.7109 86.6367 83.069 87.0664 83.7852 87.0664ZM83.7852 89C81.6367 89 80.5625 87.9258 80.5625 85.7773V84.3057C80.5625 82.1572 81.6367 81.083 83.7852 81.083H86.041C86.4134 81.083 86.7715 81.1904 87.1152 81.4053V80.4062C87.1152 79.5469 86.7572 79.1172 86.041 79.1172H82.1953V79.0098L83.0547 77.1836H86.041C88.1895 77.1836 89.2637 78.2578 89.2637 80.4062V88.4629L87.2227 89.4297H87.1152V88.6777C86.8431 88.8926 86.485 89 86.041 89H83.7852ZM92.4863 89.4297V80.4062C92.4863 78.2578 93.5605 77.1836 95.709 77.1836H98.1797C100.328 77.1836 101.402 78.2578 101.402 80.4062V88.4629L99.3613 89.4297H99.2539V80.4062C99.2539 79.5469 98.8958 79.1172 98.1797 79.1172H95.709C94.9928 79.1172 94.6348 79.5469 94.6348 80.4062V88.4629L92.5938 89.4297H92.4863ZM107.848 89C105.699 89 104.625 87.9258 104.625 85.7773V80.4062C104.625 78.2578 105.699 77.1836 107.848 77.1836H110.318C112.467 77.1836 113.541 78.2578 113.541 80.4062V80.9756L106.806 86.1855C106.906 86.7728 107.253 87.0664 107.848 87.0664H110.318C111.035 87.0664 111.393 86.6367 111.393 85.7773V85.208L113.434 84.2412H113.541V85.7773C113.541 87.9258 112.467 89 110.318 89H107.848ZM106.773 83.9404L111.382 80.2236C111.339 79.486 110.984 79.1172 110.318 79.1172H107.848C107.132 79.1172 106.773 79.5469 106.773 80.4062V83.9404ZM117.301 89.4297V73.3164L119.342 72.3496H119.449V88.4629L117.408 89.4297H117.301Z" fill="black" />
              <path d="M5 126V15.5C5 9.97715 9.47715 5.5 15 5.5H46.6433C48.1818 5.5 49.6876 5.94359 50.9803 6.77763L64.5 15.5H70.5M5 126H115.614C119.349 126 122.587 123.415 123.415 119.773L143.112 33.1081C143.823 29.9793 141.445 27 138.236 27H130M5 126L22.5 27H76.25M130 27V21.5C130 18.1863 127.314 15.5 124 15.5H70.5M130 27H76.25M70.5 15.5L76.25 27M76.25 27V45" stroke="#1396DB" stroke-width="10" />
              <path d="M84 51C84 55.4183 80.4183 59 76 59C71.5817 59 68 55.4183 68 51C68 46.5817 71.5817 43 76 43C80.4183 43 84 46.5817 84 51ZM71.9827 51C71.9827 53.2187 73.7813 55.0173 76 55.0173C78.2187 55.0173 80.0173 53.2187 80.0173 51C80.0173 48.7813 78.2187 46.9827 76 46.9827C73.7813 46.9827 71.9827 48.7813 71.9827 51Z" fill="#1396DB" />
            </svg>
            }
            {(() => {
              const parts = item.split('/');
              const lastPart = parts[parts.length - 2];
              return <div className="text-xl">{lastPart}</div>;
            })()}
          </div>
        ))}
      </div>}
      {objlist.length !== 0 && <div className="flex flex-col space-y-5 ml-[20px]">
        {objlist.slice(1).map((item, index) => (
          <div key={index} className="flex flex-row space-x-3 cursor-pointer" onClick={() => preview(item.name)}>
            <svg viewBox="0 0 1097 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4116" width="40" height="40"><path d="M365.714286 329.142857q0 45.714286-32 77.714286t-77.714286 32-77.714286-32-32-77.714286 32-77.714286 77.714286-32 77.714286 32 32 77.714286z m585.142857 219.428572v256H146.285714v-109.714286l182.857143-182.857143 91.428572 91.428571 292.571428-292.571428z m54.857143-402.285715H91.428571q-7.428571 0-12.857142 5.428572T73.142857 164.571429v694.857142q0 7.428571 5.428572 12.857143T91.428571 877.714286h914.285715q7.428571 0 12.857143-5.428572t5.428571-12.857143V164.571429q0-7.428571-5.428571-12.857143T1005.714286 146.285714z m91.428571 18.285715v694.857142q0 37.714286-26.857143 64.571429t-64.571428 26.857143H91.428571q-37.714286 0-64.571428-26.857143t-26.857143-64.571429V164.571429q0-37.714286 26.857143-64.571429t64.571428-26.857143h914.285715q37.714286 0 64.571428 26.857143t26.857143 64.571429z" p-id="4117" fill="#1296db"></path></svg>
            {(() => {
              const parts = item.name.split('/');
              const lastPart = parts[parts.length - 1];
              return <div>{lastPart}</div>;
            })()}
          </div>
        ))}
      </div>}
      {previewFile !== '' && (<div className="ml-[50px]">
        <img src={previewFile} className="w-[200px] h-auto" />
      </div>)}
    </div>
  )
}
